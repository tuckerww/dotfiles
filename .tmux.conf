# remap prefix to <ctrl>+a
set -g prefix C-a

# bind 'C-a C-a' to type 'C-a'
bind C-a send-prefix
unbind C-b

# use vim keybindings in copy mode
setw -g mode-keys vi

# use mouse
set -g mouse on

# old mouse options
# setw -g mode-mouse on
# set -g mouse-select-pane on
# setw -g mouse-select-pane on
# setw -g mouse-select-window on

# larger history
set-option -g history-limit 10000

# utf-8 support
# set-window-option -g utf8 on

# colors
setw -g mode-bg black
set-option -g default-terminal "screen-256color" #"xterm-256color" # "screen-256color"
set-option -g pane-active-border-fg green

# basic settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on
set-window-option -g window-status-current-fg colour8
setw -g window-status-current-attr reverse

# Don't automatically title windows
setw -g automatic-rename off
set allow-rename off

# Automatically title windows (window number, program name, active (or not)
# set-option -g set-titles on
# set-option -g set-titles-string '#H:#S.#I.#P #W #T'

# display time for messages/errors
set-option -g display-time 500

# Status Bar
# set-option -g status-justify right
# set-option -g status-bg black # colour213 # pink
# set-option -g status-fg cyan
# set-option -g status-interval 5
# set-option -g status-left-length 30
# set-option -g status-left '#[fg=magenta]» #[fg=blue,bold]#T#[default]'
# set-option -g status-right '#[fg=red,bold][[ #(git branch) branch ]] #[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'

# No date-time or session title:
set-option -g status-right ''
set-option -g visual-activity on

############################################################################
# windows
############################################################################
set-window-option -g window-status-current-bg red
# bind C-j previous-window
# bind C-k next-window
bind-key N previous-window
bind-key C-a last-window # C-a C-a for last active window
bind A command-prompt "rename-window %%"
# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client
# is actively looking at it.
setw -g aggressive-resize on

############################################################################
# panes
############################################################################
# Navigation ---------------------------------------------------------------
# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Resizing ---------------------------------------------------------------
# use the vim motion keys to resize panes
bind-key C-h resize-pane -L 5
bind-key C-j resize-pane -D 5
bind-key C-k resize-pane -U 5
bind-key C-l resize-pane -R 5

# Swapping  ---------------------------------------------------------------
# use capital vim keys to swap (reorder) windows left and right
bind-key H swap-window -t -1
bind-key L swap-window -t +1

############################################################################
# layouts
############################################################################
# bind o select-layout "active-only"
# bind M-- select-layout "even-vertical"
# bind M-| select-layout "even-horizontal"
# bind M-r rotate-window
